# brightbox cli tools completion
#

_brightbox()
{
    local cur prev

    COMPREPLY=()
		cur=`_get_cword`
		prev=${COMP_WORDS[COMP_CWORD-1]}
    
		command=''
		for (( i=1; i < COMP_CWORD; i++ )); do
        if [[ "${COMP_WORDS[i]}" != -* ]]; then
            command=${COMP_WORDS[i]}
            break
        fi
    done

		case $1 in
			brightbox-servers)
				case $command in
					create)
						case $prev in
							-f|--user-data-file)
								_filedir
								return 0
								;;
							-n|--name|-m|--user-data|-i|--server-count)
								return 0
								;;
						esac
						if [[ "$cur" == -* ]] ; then
							COMPREPLY=( $( compgen -W '--name --type --zone --server-count --user-data-file --user-data --no-base64' -- "$cur" ) )
						else
							test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) ) 
						fi
						;;
					destroy|list|show|shutdown|snapshot|start|stop|activate_console)
						test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) ) 
						;;
					*)
						COMPREPLY=( $( compgen -W 'create destroy help list show shutdown snapshot start stop' -- "$cur" ) )
						;;
				esac
			;;
			brightbox-images)
				case $command in
					register)
						if [[ "$cur" == -* ]] ; then
							COMPREPLY=( $( compgen -W '--unmap' -- "$cur" ) )
						fi
						;;
					destroy|list|show)
						test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) )
						;;
					*)
						COMPREPLY=( $( compgen -W 'destroy help list show register' -- "$cur" ) )
						;;
				esac
			;;		
			brightbox-cloudips)
				case $command in
					map)
						if [[ "$cur" == -* ]] ; then
							COMPREPLY=( $( compgen -W '--unmap' -- "$cur" ) )
						else
							test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) ) 
						fi
						;;
					create|destroy|list|unmap|show)
						test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) )
						;;
					*)
						COMPREPLY=( $( compgen -W 'create destroy list ummap show map help' -- "$cur" ) )
						;;
				esac
			;;		
			brightbox-config)
				case $command in
					client_add)
						if [[ "$cur" == -* ]] ; then
							COMPREPLY=( $( compgen -W '--alias --auth-url' -- "$cur" ) )
						fi
						;;
					client_default|client_remove|client_list)
						;;
					*)
						COMPREPLY=( $( compgen -W 'client_add client_remove client_default client_list help' -- "$cur" ) )
						;;
				esac
			;;
			brightbox-users)
				case $command in
					update)
						case $prev in
							-f|--ssh-key)
								_filedir
								return 0
							;;
							-n|--name)
								return 0
							;;
						esac
						if [[ "$cur" == -* ]] ; then
							COMPREPLY=( $( compgen -W '--ssh-key --name' -- "$cur" ) )
						else
							test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) ) 
						fi
						;;
					list|show)
						test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) ) 
						;;
					*)
						COMPREPLY=( $( compgen -W 'list show update help' -- "$cur" ) )
						;;
				esac
			;;
			brightbox-lbs)
				case $command in
					create|update)
						if [[ "$cur" == -* ]] ; then
							COMPREPLY=( $( compgen -W '--hc-down --hc-interval --port --listeners --name --policy --hc-request --hc-timeout --hc-up --hc-type' -- "$cur" ) )
						else
							test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) ) 
						fi
						;;
					destroy|list|show|remove_nodes|add_nodes)
						test -d ~/.brightbox/cache && COMPREPLY=( $( compgen -W '`ls ~/.brightbox/cache/`' -- "$cur" ) ) 
						;;
					*)
						COMPREPLY=( $( compgen -W 'create destroy help list show shutdown snapshot start stop' -- "$cur" ) )
						;;
				esac
			;;

		esac

}
complete -F _brightbox -o filenames brightbox-servers
complete -F _brightbox -o filenames brightbox-images
complete -F _brightbox -o filenames brightbox-cloudips
complete -F _brightbox -o filenames brightbox-config
complete -F _brightbox -o filenames brightbox-users
complete -F _brightbox -o filenames brightbox-lbs

# Local variables:
# mode: shell-script
# sh-basic-offset: 2
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
